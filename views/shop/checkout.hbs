
<div>
    <button class="secondary-btn">hello</button>
</div>




<div class="checkoutContainr">
    <div class="paymantContent">
        <h2 class="headerCheckout">Checkout</h2>
        <hr>
        <form action="/createPaymant" id="payment-form" method="POST">
            <input type="text" id="fNameCheckout" name="fNameCheckout" placeholder="First Name" style="margin: 20px auto; width: 100%">
            <input type="text" id="lNameCheckout" name="lNameCheckout" placeholder="Last Name" style="margin: 20px auto; width: 100%">
            <input type="email" id="emailCheckout" name="emailCheckout" placeholder="E-mail" style="margin: 20px auto; width: 100%">
            <div id="card-element" style="margin: 20px 0"></div>
            <div class="sr-field-error" id="card-errors" role="alert"></div>
            <hr>
            <button type="button" action="/create-order" onclick="payWay()">Pay</button>
            <!-- <button id="submit" class="submitPay">Pay </button> -->
            <!-- <input type="hidden" name="price" value="333"> -->
        </form>
    </div>
</div>
<script>
function getTotalPrice() {
    var localStorageCart = JSON.parse(localStorage.getItem("cart"));
    var totalPrice = 0;

    if (!localStorageCart) {
        return;
    }

    for (var i = 0; i < localStorageCart.length; i++) {
        var item = localStorageCart[i];
        totalPrice += item.selectedPeople.price;

        if (item.selectedBakcground != null) {
            totalPrice += item.selectedBakcground.price;
        }
    }
    return totalPrice * 100;
};

////create total price/////////////////////////////////////////////////////////////////////////////



function payWay(){
    var fNameCheckout = document.getElementById('fNameCheckout').value;
    var lNameCheckout = document.getElementById('lNameCheckout').value;
    var emailCheckout = document.getElementById('emailCheckout').value;
    var createOrder = document.getElementById('createOrder');
    var wayforpay = new Wayforpay();
    //> Read order data from localStorage (ordered itmes):
    var localStorageCart = JSON.parse(localStorage.getItem("cart"));

    const order = [];

    for (var m = 0; m < localStorageCart.length; m++) {
        var item = localStorageCart[m];

        order.push({
            peopleId: item.selectedPeople.id,
            backgroundName: item.selectedBakcground.name,
            image: item.image,
            text: item.wishesText,
            price: item.selectedPeople.price + item.selectedBakcground.price
        });
    };
    //<

    //>Send request to the server ("/create-order") with ordered items;
    fetch('/create-order', {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'POST',
            body: JSON.stringify({
                order: order,
                userData: {
                    firstName: fNameCheckout,
                    lastName: lNameCheckout,
                    email: emailCheckout
                }
            })
        })
        .then(res => res.json())
        .then(res => {
            debugger
                wayforpay.run({
                        merchantAccount: res.merchantAccount,
                        merchantDomainName: res.merchantDomainName,
                        merchantSignature: res.hashData,
                        orderReference: res.orderId,
                        orderDate: res.orderDate,
                        amount: res.amount,
                        currency: res.currency,
                        productName: res.productName,
                        productPrice: res.productPrice,
                        productCount: res.productCount
                    },
                    function(response) {
                        debugger
                        // on approved                          
                    },
                    function(response) {
                        // on declined          
                    },
                    function(response) {
                        // on pending or in processing 

                    });
        })
        // .cathc(err => ...);
}


////create paymant/////////////////////////////////////////////////////////////////////////////

// var stripe;
// var orderData = {
//     amount: getTotalPrice(),
//     currency: "usd"
// };


// var pay = function(stripe, card) {

//     stripe
//         .createPaymentMethod("card", card)
//         .then(function(result) {
//             if (result.error) {
//                 console.log(result);
//             } else {
//                 orderData.paymentMethodId = result.paymentMethod.id;

//                 return fetch("/pay", {
//                     method: "POST",
//                     headers: {
//                         "Content-Type": "application/json"
//                     },
//                     body: JSON.stringify(orderData)
//                 });
//             }
//         })
//         .then(function(result) {
//             return result.json();
//         })

//         .then(function(response) {

//             if (response.error) {
//                 showError(response.error);
//             } else if (response.requiresAction) {
//                 handleAction(response.clientSecret);
//             } else {
//                 // orderComplete(response.clientSecret);
//             }
//         });
// };

// var setupElements = function(data) {
//     stripe = Stripe(data);
//     var elements = stripe.elements();
//     var style = {
//         base: {
//             color: "#32325d",
//             fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
//             fontSmoothing: "antialiased",
//             fontSize: "18px",
//             "::placeholder": {
//                 color: "grey"
//             }
//         },
//         invalid: {
//             color: "#fa755a",
//             iconColor: "#fa755a"
//         }
//     };

//     var card = elements.create("card", { style: style });
//     card.mount("#card-element");

//     return {
//         stripe: stripe,
//         card: card,
//         clientSecret: data.clientSecret
//     };
// };

// const setelem = setupElements('{{stripe}}');

// var form = document.getElementById("payment-form");
// form.addEventListener("submit", function(event) {
//     event.preventDefault();
//     pay(setelem.stripe, setelem.card, setelem.clientSecret);
// });

// var showError = function(errorMsgText) {
//     var errorMsg = document.querySelector(".sr-field-error");
//     errorMsg.textContent = errorMsgText;
//     setTimeout(function() {
//         errorMsg.textContent = "";
//     }, 4000);
// };
////create paymant/////////////////////////////////////////////////////////////////////////////
</script>